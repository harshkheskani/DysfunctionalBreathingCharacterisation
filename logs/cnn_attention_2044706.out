======================================================
Job started on landonia19.inf.ed.ac.uk at Sun 13 Jul 11:24:07 BST 2025
Job ID: 2044706
======================================================
Conda environment 'diss' activated.
Using python: /home/s1978431/miniconda3/envs/diss/bin/python
Changed to /home/s1978431/DysfunctionalBreathingCharacterisation
Starting Python script: /home/s1978431/DysfunctionalBreathingCharacterisation/src/Classification/attention_cnn_cluster.py
Data source: /home/s1978431/DysfunctionalBreathingCharacterisation/data/bishkek_csr/03_train_ready
Results will be saved to: /home/s1978431/DysfunctionalBreathingCharacterisation/results/cd2044706
======================================================================
=== STARTING SLEEP APNEA DETECTION TRAINING SCRIPT ===
======================================================================

--- 1. Setting up configuration and constants ---
Data Directory: /home/s1978431/DysfunctionalBreathingCharacterisation/data/bishkek_csr/03_train_ready
Output Directory: /home/s1978431/DysfunctionalBreathingCharacterisation/results/cd2044706

[CONFIG] Parameters:
  - Classes: 6 ['Normal', 'Obstructive Apnea', 'Hypopnea Events', 'Central/Mixed Apnea', 'RERA', 'Desaturation']
  - Window Size: 375 samples (30s)
  - Window Step: 74 samples (80.0% overlap)
  - Epochs: 100
  - Batch Size: 64
  - Features: ['breathingSignal', 'activityLevel', 'breathingRate', 'x', 'y', 'z', 'breathing_signal_rolling_mean', 'breathing_signal_rolling_std', 'accel_magnitude']

--- 2. Loading and preprocessing data ---
Found 9 event files. Processing each session...
  (1/9) Processing session: 10-05-2025
  (2/9) Processing session: 11-05-2025
  (3/9) Processing session: 24-04-2025
  (4/9) Processing session: 16-04-2025
  (5/9) Processing session: 25-04-2025
  (6/9) Processing session: 26-04-2025
  (7/9) Processing session: 08-05-2025
  (8/9) Processing session: 04-04-2025
  (9/9) Processing session: 05-04-2025

Successfully processed 9 out of 9 sessions.

----------------------------------------------------
Data loading and labeling complete.
Final DataFrame shape: (2363398, 14)
Class distribution in raw data points: 
Label
0    0.883192
5    0.071997
2    0.036877
1    0.007303
3    0.000425
4    0.000205
Name: proportion, dtype: float64
----------------------------------------------------

--- 3. Engineering features, imputing missing values, and normalizing ---
Engineering new signal-based features...
New features added: ['breathing_signal_rolling_mean', 'breathing_signal_rolling_std', 'accel_magnitude']

Checking for and imputing missing values (NaNs)...
  - Found 4762 NaNs in 'breathingSignal'. Applying forward-fill and backward-fill.
  - Found 2317390 NaNs in 'breathingRate'. Applying forward-fill and backward-fill.
  - Found 1954 NaNs in 'breathing_signal_rolling_mean'. Applying forward-fill and backward-fill.
Imputation complete. No NaNs remain in feature columns.

Applying per-session (per-subject) normalization...
  - Normalizing session 1/9: 10-05-2025
  - Normalizing session 2/9: 11-05-2025
  - Normalizing session 3/9: 24-04-2025
  - Normalizing session 4/9: 16-04-2025
  - Normalizing session 5/9: 25-04-2025
  - Normalizing session 6/9: 26-04-2025
  - Normalizing session 7/9: 08-05-2025
  - Normalizing session 8/9: 04-04-2025
  - Normalizing session 9/9: 05-04-2025
Normalization complete.

--- 4. Creating time-series windows ---
Data windowing complete.
----------------------------------------------------
Shape of X (features): (31897, 375, 9)
Shape of y (labels):   (31897,)
Shape of groups (IDs): (31897,)
Final class distribution across all windows: Counter({np.int64(0): 28201, np.int64(5): 2501, np.int64(2): 1034, np.int64(1): 151, np.int64(3): 6, np.int64(4): 4})
----------------------------------------------------

--- 5. Setting up PyTorch device ---
Using device: cuda

--- 6. Performing initial train-test split for preliminary check ---
Train/Test split based on 7 train nights and 2 test nights.
Training set class distribution: Counter({np.int64(0): 21969, np.int64(5): 1612, np.int64(2): 699, np.int64(1): 115, np.int64(3): 4, np.int64(4): 4})
Testing set class distribution:  Counter({np.int64(0): 6232, np.int64(5): 889, np.int64(2): 335, np.int64(1): 36, np.int64(3): 2})

Balancing the training data using SMOTE...
  - Original training distribution: Counter({np.int64(0): 21969, np.int64(5): 1612, np.int64(2): 699, np.int64(1): 115, np.int64(3): 4, np.int64(4): 4})
  - Smallest minority class has 4 samples. Setting k_neighbors for SMOTE to 3.
  - Resampled training distribution: Counter({np.int64(0): 21969, np.int64(5): 21969, np.int64(2): 21969, np.int64(1): 21969, np.int64(3): 21969, np.int64(4): 21969})

PyTorch DataLoaders created successfully.

--- 7. Training and Evaluating on the initial split ---
PyTorch Improved CNN model created and moved to device.
======================================================
Job finished at Sun 13 Jul 11:30:49 BST 2025
======================================================
